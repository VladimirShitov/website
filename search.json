[
  {
    "objectID": "architecture.html",
    "href": "architecture.html",
    "title": "Architecture",
    "section": "",
    "text": "- Demux.- Mapping\n\n\n\n- Count QC- Doublet calling- Ambient RNA- Gatekeeper\n\n\n\n- Normalisation- Feature filtering- Feature selection- Batch correction?- Dim. red.?\n\n\n\n- Dim. red.- Data integration\n\n\n\n- Clustering- Cell typing- GRN- …\n\n\n\nRawdata\n\n\n\nDataset\n\n\n\nIngestion\n\n\n\nUnimodalsingle-sampleprocessing\n\n\n\nUnimodalmulti-sampleprocessing\n\n\n\nIntegration\n\n\n\nInterpretation\n\n\n\nConversion\n\n\n\nSplit\n\n\n\nConcat\n\n\n\nMerge\n\n\n\n\nFigure 1: Overview single cell processing steps in OpenPipeline. Rectangles are data objects, parallelograms are Viash modules or subworkflows."
  },
  {
    "objectID": "architecture.html#decisions-to-make",
    "href": "architecture.html#decisions-to-make",
    "title": "Architecture",
    "section": "Decisions (to make)",
    "text": "Decisions (to make)\n\nTry to avoid pipeline metromaps (Example). Instead, multiple pipelines using a different subset or ordering of the same components can be implemented to suit the needs of any particular requirement.\nDivision of responsibilities:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCZ Biohub\n\n\n\nJanssen\n\n\n\nJanssen\n\n\n\nJanssen\n\n\n\nJanssen\n\n\n\nJanssen\n\n\n\nHelmholtz\n\n\n\nAll(depends onspecific needs)\n\n\n\nJanssen\n\n\n\nIngestion\n\n\n\nUnimodalsingle-sampleprocessing\n\n\n\nUnimodalmulti-sampleprocessing\n\n\n\nIntegration\n\n\n\nInterpretation\n\n\n\nConversion\n\n\n\nRaw\n\n\n\nSplit\n\n\n\nConcat\n\n\n\nMerge\n\n\n\nDataset\n\n\n\n\nFigure 2: Division of responsibilities."
  },
  {
    "objectID": "architecture.html#use-cases",
    "href": "architecture.html#use-cases",
    "title": "Architecture",
    "section": "Use cases",
    "text": "Use cases\n\n\n\n\n\n\nNote\n\n\n\nIn these use-cases, Interpretation, Conversion and Dataset are omitted because they are the same in every use case.\n\n\n\nA single unimodal sample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSample 1\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 1\n\n\n\nUSS GEX\n\n\n\nConcat\n\n\n\nCombinedGEX\n\n\n\nUMS GEX\n\n\n\nMerge\n\n\n\nIntegration\n\n\n\n…\n\n\n\n\nFigure 3: Example of how the concat and merges work.\nGEX: Gene-expression. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nA single multimodal sample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSample 1\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 1\n\n\n\nADT 1\n\n\n\nRNAV 1\n\n\n\nUSS GEX\n\n\n\nUSS ADT\n\n\n\nUSS RNAV\n\n\n\nConcat\n\n\n\nCombinedGEX\n\n\n\nConcat\n\n\n\nCombinedADT\n\n\n\nConcat\n\n\n\nCombinedRNAV\n\n\n\nUMS GEX\n\n\n\nUMS ADT\n\n\n\nUMS RNAV\n\n\n\nMerge\n\n\n\nIntegration\n\n\n\n…\n\n\n\n\nFigure 4: Example of how the concat and merges work.\nGEX: Gene-expression. ADT: Antibody-Derived Tags. RNAV: RNA Velocity. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nMultiple unimodal samples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSample 1\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 1\n\n\n\nSample 2\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 2\n\n\n\nSample 3\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 3\n\n\n\nUSS GEX\n\n\n\nUSS GEX\n\n\n\nUSS GEX\n\n\n\nConcat\n\n\n\nCombinedGEX\n\n\n\nUMS GEX\n\n\n\nMerge\n\n\n\nIntegration\n\n\n\n…\n\n\n\n\nFigure 5: Example of how the concat and merges work.\nGEX: Gene-expression. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nMultiple multimodal samples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSample 1\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 1\n\n\n\nADT 1\n\n\n\nSample 2\n\n\n\nIngestion\n\n\n\nSplit\n\n\n\nGEX 2\n\n\n\nADT 2\n\n\n\nUSS GEX\n\n\n\nUSS ADT\n\n\n\nUSS GEX\n\n\n\nUSS ADT\n\n\n\nConcat\n\n\n\nCombinedGEX\n\n\n\nConcat\n\n\n\nCombinedADT\n\n\n\nUMS GEX\n\n\n\nUMS ADT\n\n\n\nMerge\n\n\n\nIntegration\n\n\n\n…\n\n\n\n\nFigure 6: Example of how the concat and merges work.\nGEX: Gene-expression. ADT: Antibody-Derived Tags. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing."
  },
  {
    "objectID": "architecture.html#subworkflows",
    "href": "architecture.html#subworkflows",
    "title": "Architecture",
    "section": "Subworkflows",
    "text": "Subworkflows\n\nIngestion\nPurpose: Convert raw sequencing data or count tables into MuData data for further processing.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.tar.gz/Directory\n\n\n\n.fastq.gz/.fastq\n\n\n\n.tar.gz?\n\n\n\nDirectory\n\n\n\n.h5mu\n\n\n\nBCL*\n\n\n\nFastq*\n\n\n\nReference\n\n\n\nRaw out*\n\n\n\nRaw counts†\n\n\n\nDemux\n\n\n\nMapping\n\n\n\nConvert\n\n\n\n\nFigure 7: Ingestion pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nSingle-sample unimodal processing\nPurpose: Per modality fitering pipelines are available to select true from false cells.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRaw counts*\n\n\n\nProcessedcounts†\n\n\n\nCellfiltering\n\n\n\nDoubletcalling\n\n\n\nAmbient RNAcorrection\n\n\n\n\nFigure 8: Single-sample processing pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nMulti-sample unimodal processing\nPurpose: … .\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcessedcounts*\n\n\n\nNormalisedcounts†\n\n\n\nFeature filtering\n\n\n\nBatch correction?\n\n\n\nNormalisation\n\n\n\nFeature selection\n\n\n\n\nFigure 9: Multi-sample processing pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nIntegration\nPurpose: Performs an integration pipeline for single cell data based on a single or multiple modalities.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNormalisedcounts*\n\n\n\nIntegrateddata†\n\n\n\nData integration\n\n\n\nDimensionalityreduction\n\n\n\n\nFigure 10: Integration pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nInterpretation\nPurpose: Take different dataset annotations and combine them together into a single enriched dataset. The idea is to have a diff_muon object, i.e. a muon object containing the changes of the original object where data from the diff_muon will be pushed to the original muon object.\n\n\n\n\n\n\nNote\n\n\n\nThis is what we did a time ago and it has the drawback that it could make everything very slow. We might need to be able to aggregate diffs before adding them to the final object."
  }
]