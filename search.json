[
  {
    "objectID": "architecture.html",
    "href": "architecture.html",
    "title": "Architecture",
    "section": "",
    "text": "flowchart LR\n  Raw[Raw\\ndata]\n  Dataset[Dataset]\n  Ingestion[/Ingestion/]\n  Preproc1[/Unimodal\\nsingle-sample\\nprocessing/]\n  Preproc2[/Unimodal\\nmulti-sample\\nprocessing/]\n  Concat[/Concatenating\\nSamples/]\n  Merge[/Merging\\nmodes/]\n  Integration[/Integration/]\n  Interpretation[/Interpretation/]\n  Conversion[/Conversion/]\n\n  Raw --- Ingestion --> Split[/Split/] --> Preproc1 --> Concat --> Preproc2 --> Merge --> Integration --> Interpretation --> Conversion --> Dataset\n\n  Ingestion -.-|\"- Demux.\\n- Mapping\"| Ingestion\n  Preproc1 -.-|\"- Count QC\\n- Doublet calling\\n- Ambient RNA\\n- Gatekeeper\"| Preproc1\n  Preproc2 -.-|\"- Normalisation\\n- Feature annotation\\n- Feature selection\\n- Batch correction?\\n- Dim. red.?\"| Preproc2\n  Integration -.-|\"- Dim. red.\\n- Data integration\"| Integration\n  Interpretation -.-|\"- Clustering\\n- Cell typing\\n- GRN\\n- ...\"| Interpretation\n\n  linkStyle 10,11,12,13,14 stroke:#fff,stroke-width:0px,text-align:left;\n\n  %% click Ingestion \"./#ingestion\"\n  %% style Ingestion color:#2873c7,text-decoration:underline;\n  %% click Preproc1 \"./#single-sample-preproc\"\n  %% style Preproc1 color:#2873c7,text-decoration:underline;\n  %% click Preproc2 \"./#multi-sample-preproc\"\n  %% style Preproc2 color:#2873c7,text-decoration:underline;\n  %% click Integration \"./#integration\"\n  %% style Integration color:#2873c7,text-decoration:underline;\n\n\n\n\n\nFigure 1: Overview single cell processing steps in OpenPipeline. Rectangles are data objects, parallelograms are Viash modules or subworkflows."
  },
  {
    "objectID": "architecture.html#use-cases",
    "href": "architecture.html#use-cases",
    "title": "Architecture",
    "section": "Use cases",
    "text": "Use cases\n\n\n\n\n\n\nNote\n\n\n\nIn these use-cases, Interpretation, Conversion and Dataset are omitted because they are the same in every use case.\n\n\n\nA single unimodal sample\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  ProcGEX1 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  GEX --> ProcGEX[/UMS GEX/]\n  ProcGEX --- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 2: Example of how the concatenation and merges work.\nGEX: Gene-expression. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nA single multimodal sample\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1] & ADT1[ADT 1] & RNAV1[RNAV 1]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  ADT1 --> ProcADT1[/USS ADT/]\n  RNAV1 --> ProcRNAV1[/USS RNAV/]\n  ProcGEX1 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  ProcADT1 --- ConcatADT[/Concatenating\\nSamples/] --> ADT[Combined\\nADT]\n  ProcRNAV1 --- ConcatRNAV[/Concatenating\\nSamples/] --> RNAV[Combined\\nRNAV]\n  GEX --> ProcGEX[/UMS GEX/]\n  ADT --> ProcADT[/UMS ADT/]\n  RNAV --> ProcRNAV[/UMS RNAV/]\n  ProcGEX & ProcADT & ProcRNAV--- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 3: Example of how the concatenation and merges work.\nGEX: Gene-expression. ADT: Antibody-Derived Tags. RNAV: RNA Velocity. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nMultiple unimodal samples\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1]\n  Raw2[Sample 2] --- Ingestion2[/Ingestion/] --> Split2[/Split/] --> GEX2[GEX 2]\n  Raw3[Sample 3] --- Ingestion3[/Ingestion/] --> Split3[/Split/] --> GEX3[GEX 3]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  GEX2 --> ProcGEX2[/USS GEX/]\n  GEX3 --> ProcGEX3[/USS GEX/]\n  ProcGEX1 & ProcGEX2 & ProcGEX3 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  GEX --> ProcGEX[/UMS GEX/]\n  ProcGEX --- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 4: Example of how the concatenation and merges work.\nGEX: Gene-expression. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nMultiple multimodal samples\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1] & ADT1[ADT 1]\n  Raw2[Sample 2] --- Ingestion2[/Ingestion/] --> Split2[/Split/] --> GEX2[GEX 2] & ADT2[ADT 2]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  ADT1 --> ProcADT1[/USS ADT/]\n  GEX2 --> ProcGEX2[/USS GEX/]\n  ADT2 --> ProcADT2[/USS ADT/]\n  ProcGEX1 & ProcGEX2 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  ProcADT1 & ProcADT2 --- ConcatADT[/Concatenating\\nSamples/] --> ADT[Combined\\nADT]\n  GEX --> ProcGEX[/UMS GEX/]\n  ADT --> ProcADT[/UMS ADT/]\n  ProcGEX & ProcADT --- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 5: Example of how the concat and merges work.\nGEX: Gene-expression. ADT: Antibody-Derived Tags. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing."
  },
  {
    "objectID": "architecture.html#subworkflows",
    "href": "architecture.html#subworkflows",
    "title": "Architecture",
    "section": "Subworkflows",
    "text": "Subworkflows\n\nIngestion\nPurpose: Convert raw sequencing data or count tables into MuData data for further processing.\n\n\n\n\n\n\nflowchart LR\n\n  BCL[\"BCL*\"]\n  Fastq[\"Fastq*\"]\n  Ref[\"Reference\"]\n  RawDir[\"Raw out*\"]\n  RawCounts[\"Raw counts†\"]\n\n  Demux[/\"Demux\"/]\n  Mapping[/\"Mapping\"/]\n  Convert[/\"Convert\"/]\n\n  BCL --- Demux --> Fastq\n  Fastq & Ref --- Mapping --> RawDir --- Convert --> RawCounts\n\n\n  BCL -.-|\".tar.gz/Directory\"| BCL\n  Fastq -.-|\".fastq.gz/.fastq\"| Fastq\n  Ref -.-|\".tar.gz?\"| Ref\n  RawDir -.-|\"Directory\"| RawDir\n  RawCounts -.-|\".h5mu\"| RawCounts\n\n  linkStyle 7,8,9,10,11 stroke:#fff,stroke-width:0px,text-align:left;\n\n\n\n\n\nFigure 6: Ingestion pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nSingle-sample unimodal processing\nPurpose: Per modality fitering pipelines are available to select true from false cells.\n\n\n\n\n\n\nflowchart LR\n\n  RawCounts[\"Raw counts*\"]\n  Processed[\"Processed\\ncounts†\"]\n\n  Step1[/\"Cell\\nfiltering\"/]\n  Step2[/\"Doublet\\ncalling\"/]\n  Step3[/\"Ambient RNA\\ncorrection\"/]\n  \n  RawCounts --> Step1 --> Step2 --> Step3 --> Processed\n\n\n\n\n\nFigure 7: Single-sample processing pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nMulti-sample unimodal processing\nPurpose: … .\n\n\n\n\n\n\nflowchart LR\n\n  Processed[\"Processed\\ncounts*\"]\n  Normalised[\"Normalised\\ncounts†\"]\n\n  Step1[/\"Feature annotation\"/]\n  Step2[/\"Batch correction?\"/]\n  Step3[/\"Normalisation\"/]\n  Step4[/\"Feature selection\"/]\n\n  Processed --> Step1 --> Step2 --> Step3 --> Step4 --> Normalised\n\n\n\n\n\nFigure 8: Multi-sample processing pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nIntegration\nPurpose: Performs an integration pipeline for single cell data based on a single or multiple modalities.\n\n\n\n\n\n\nflowchart LR\n\n  Normalised[\"Normalised\\ncounts*\"]\n  Integrated[\"Integrated\\ndata†\"]\n\n  Step1[/\"Data integration\"/]\n  Step2[/\"Dimensionality\\nreduction\"/]\n  \n  Normalised --> Step1 --> Step2 --> Integrated\n\n\n\n\n\nFigure 9: Integration pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nInterpretation\nPurpose: Take different dataset annotations and combine them together into a single enriched dataset. The idea is to have a diff_muon object, i.e. a muon object containing the changes of the original object where data from the diff_muon will be pushed to the original muon object.\n\n\n\n\n\n\nNote\n\n\n\nThis is what we did a time ago and it has the drawback that it could make everything very slow. We might need to be able to aggregate diffs before adding them to the final object."
  },
  {
    "objectID": "architecture.html#decisions-to-make",
    "href": "architecture.html#decisions-to-make",
    "title": "Architecture",
    "section": "Decisions (to make)",
    "text": "Decisions (to make)\n\nTry to avoid pipeline metromaps (Example). Instead, multiple pipelines using a different subset or ordering of the same components can be implemented to suit the needs of any particular requirement.\nDivision of labour:\n\nCZ Biohub: Ingestion (GEX, Multiome, Cite-seq, …?)\nJanssen: Split, Concatenating samples, Merging modes, Conversion, GEX USS, GEX MSS\nHelmholtz: Integration\nAll: Intepretation (depending on the specific needs)\nTBD: ADT, ATAC, RNAV, VDJ, …?\n\nReporting\nInteractive (sub)-workflows\nLearn from openproblems.bio benchmarks."
  }
]