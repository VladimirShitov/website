[
  {
    "objectID": "examples/ingestion_bdrhap.html",
    "href": "examples/ingestion_bdrhap.html",
    "title": "BD Rhapsody WTA",
    "section": "",
    "text": "mkdir raw\nwget \"http://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-Demo-Data-Inputs/12WTA-ABC-SMK-EB-5kJRT.tar\"\ntar -xvf \"12WTA-ABC-SMK-EB-5kJRT.tar\" -C \"raw/\" --strip-components=1\nll -h raw\n-rw-------. 1 rcannood rcannood 6.2G Jun  3 20:50 12ABC_S1_L432_R1_001.fastq.gz\n-rw-------. 1 rcannood rcannood 4.8G Jun  3 20:53 12ABC_S1_L432_R2_001.fastq.gz\n-rw-------. 1 rcannood rcannood 257M Jun  3 20:51 12SMK_S1_L432_R1_001.fastq.gz\n-rw-------. 1 rcannood rcannood 145M Jun  3 20:51 12SMK_S1_L432_R2_001.fastq.gz\n-rw-------. 1 rcannood rcannood  16G Jun  3 20:51 12WTA_S1_L432_R1_001.fastq.gz\n-rw-------. 1 rcannood rcannood  20G Jun  3 20:53 12WTA_S1_L432_R2_001.fastq.gz\n-rw-------. 1 rcannood rcannood 2.4K Jun  3 00:04 BDAbSeq_ImmuneDiscoveryPanel.fasta\n\n\n\n\n\n\nWarning\n\n\n\nThis file is 45GB in size, so it might take a while to download.\n\n\nUnfortunately, the protocol for dataset is not (yet) described on the BD Rhapsody Demo Datasets website. However it seems these samples contain 5k cells from the Jurkat, Ramos and THP1 cell lines mixed in a 1:1:1 ratio, where one sample was tagged with the Whole Transcriptome Amplification (WTA) kit, one with the Single-Cell Multiplexing Kit (SMK), and one with the Antibody-specific BarCode (ABC) kit."
  },
  {
    "objectID": "examples/ingestion_bdrhap.html#download-reference",
    "href": "examples/ingestion_bdrhap.html#download-reference",
    "title": "BD Rhapsody WTA",
    "section": "Download reference",
    "text": "Download reference\nmkdir reference\nwget \"https://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-WTA/GRCh38-PhiX-gencodev29/GRCh38-PhiX-gencodev29-20181205.tar.gz\" -O \"reference/GRCh38-PhiX-gencodev29-20181205.tar.gz\"\nwget \"https://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-WTA/GRCh38-PhiX-gencodev29/gencodev29-20181205.gtf\" -O \"reference/gencodev29-20181205.gtf\"\nll -h reference\n-rw-------. 1 rcannood rcannood 1.1G Jun  3 20:30 gencodev29-20181205.gtf\n-rw-------. 1 rcannood rcannood  25G Jun  3 20:45 GRCh38-PhiX-gencodev29-20181205.tar.gz\n\n\n\n\n\n\nWarning\n\n\n\nThis reference is already quite old. You might want to build a new version. We might include a pipeline for this in the future."
  },
  {
    "objectID": "examples/ingestion_bdrhap.html#creating-the-param-file",
    "href": "examples/ingestion_bdrhap.html#creating-the-param-file",
    "title": "BD Rhapsody WTA",
    "section": "Creating the param file",
    "text": "Creating the param file\nContents of params.yaml:\nparam_list:\n- id: \"SMK\"\n  run_name: \"SMK\"\n  output: \"SMK\"\n  input: \"raw/12SMK_S1_L432_R[12]_001.fastq.gz\"\n- id: \"ABC\"\n  run_name: \"ABC\"\n  output: \"ABC\"\n  input: \"raw/12ABC_S1_L432_R[12]_001.fastq.gz\"\n- id: \"WTA\"\n  run_name: \"WTA\"\n  output: \"WTA\"\n  input: \"raw/12WTA_S1_L432_R[12]_001.fastq.gz\"\nabseq_reference: \"raw/BDAbSeq_ImmuneDiscoveryPanel.fasta\"\nreference_genome: \"reference/GRCh38-PhiX-gencodev29-20181205.tar.gz\"\ntranscriptome_annotation: \"reference/gencodev29-20181205.gtf\"\npublish_dir: \"output/\"\nsample_tags_version: \"hs\"\ntag_names: [\"1-Jurkat\", \"2-Ramos\", \"3-THP1\"]\nputative_cell_call: \"mRNA\""
  },
  {
    "objectID": "examples/ingestion_bdrhap.html#creating-additional-config-settings",
    "href": "examples/ingestion_bdrhap.html#creating-additional-config-settings",
    "title": "BD Rhapsody WTA",
    "section": "Creating additional config settings",
    "text": "Creating additional config settings\nContents of nextflow.config:\n// define memory and cpu constraints\nprocess {\n  withLabel: highmem { memory = 60.Gb }\n  withLabel: highcpu { cpus = 30 }\n}\n\n// do not stop on error\nprocess.errorStrategy = 'ignore' \n\n// set default container\nprocess.container = 'nextflow/bash:latest'\n\n// temp dir needs at least 500GB free disk space\ndocker.temp = \"./temp/\"\n\n// use docker\ndocker.enabled = true"
  },
  {
    "objectID": "examples/ingestion_bdrhap.html#starting-a-bd-rhapsody-run",
    "href": "examples/ingestion_bdrhap.html#starting-a-bd-rhapsody-run",
    "title": "BD Rhapsody WTA",
    "section": "Starting a BD Rhapsody run",
    "text": "Starting a BD Rhapsody run\nContents of run.sh:\n#!/bin/bash\nnextflow \\\n  run openpipelines-bio/openpipeline -r main_build \\\n  -main-script target/nextflow/mapping/bd_rhapsody_wta/main.nf \\\n  -resume -latest \\\n  -params-file params.yaml"
  },
  {
    "objectID": "examples/ingestion_bdrhap.html#output",
    "href": "examples/ingestion_bdrhap.html#output",
    "title": "BD Rhapsody WTA",
    "section": "Output",
    "text": "Output\noutput\n├── ABC\n│   ├── ABC_Bioproduct_Stats.csv\n│   ├── ABC_DBEC_MolsPerCell.csv\n│   ├── ABC_DBEC_MolsPerCell_Unfiltered.csv.gz\n│   ├── ABC_DBEC_ReadsPerCell.csv\n│   ├── ABC_DBEC_ReadsPerCell_Unfiltered.csv.gz\n│   ├── ABC_Expression_Data.st\n│   ├── ABC_Expression_Data_Unfiltered.st.gz\n│   ├── ABC_final.BAM\n│   ├── ABC_final.BAM.bai\n│   ├── ABC_Metrics_Summary.csv\n│   ├── ABC_RSEC_MolsPerCell.csv\n│   ├── ABC_RSEC_MolsPerCell_Unfiltered.csv.gz\n│   ├── ABC_RSEC_ReadsPerCell.csv\n│   ├── ABC_RSEC_ReadsPerCell_Unfiltered.csv.gz\n│   └── config.yml\n├── SMK\n│   ├── Combined_SMK_Expression_Data.st\n│   ├── Combined_SMK_final.BAM\n│   ├── Combined_SMK_final.BAM.bai\n│   ├── Combined_SMK_RSEC_MolsPerCell.csv\n│   ├── Combined_SMK_RSEC_ReadsPerCell.csv\n│   ├── config.yml\n│   ├── SMK_Bioproduct_Stats.csv\n│   ├── SMK_Expression_Data_Unfiltered.st.gz\n│   ├── SMK_Metrics_Summary.csv\n│   ├── SMK_Multiplet_and_Undetermined.zip\n│   ├── SMK_RSEC_MolsPerCell_Unfiltered.csv.gz\n│   ├── SMK_RSEC_ReadsPerCell_Unfiltered.csv.gz\n│   ├── SMK_Sample_Tag_Calls.csv\n│   ├── SMK_Sample_Tag_Metrics.csv\n│   └── SMK_Sample_Tag_ReadsPerCell.csv\n└── WTA\n    ├── config.yml\n    ├── WTA_Bioproduct_Stats.csv\n    ├── WTA_Expression_Data.st\n    ├── WTA_Expression_Data_Unfiltered.st.gz\n    ├── WTA_final.BAM\n    ├── WTA_final.BAM.bai\n    ├── WTA_Metrics_Summary.csv\n    ├── WTA_RSEC_MolsPerCell.csv\n    ├── WTA_RSEC_MolsPerCell_Unfiltered.csv.gz\n    ├── WTA_RSEC_ReadsPerCell.csv\n    └── WTA_RSEC_ReadsPerCell_Unfiltered.csv.gz"
  },
  {
    "objectID": "architecture/use-cases.html",
    "href": "architecture/use-cases.html",
    "title": "Use-cases",
    "section": "",
    "text": "A single unimodal sample\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  ProcGEX1 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  GEX --> ProcGEX[/UMS GEX/]\n  ProcGEX --- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 1: Example of how the concatenation and merges work.\nGEX: Gene-expression. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nA single multimodal sample\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1] & ADT1[ADT 1] & RNAV1[RNAV 1]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  ADT1 --> ProcADT1[/USS ADT/]\n  RNAV1 --> ProcRNAV1[/USS RNAV/]\n  ProcGEX1 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  ProcADT1 --- ConcatADT[/Concatenating\\nSamples/] --> ADT[Combined\\nADT]\n  ProcRNAV1 --- ConcatRNAV[/Concatenating\\nSamples/] --> RNAV[Combined\\nRNAV]\n  GEX --> ProcGEX[/UMS GEX/]\n  ADT --> ProcADT[/UMS ADT/]\n  RNAV --> ProcRNAV[/UMS RNAV/]\n  ProcGEX & ProcADT & ProcRNAV--- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 2: Example of how the concatenation and merges work.\nGEX: Gene-expression. ADT: Antibody-Derived Tags. RNAV: RNA Velocity. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nMultiple unimodal samples\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1]\n  Raw2[Sample 2] --- Ingestion2[/Ingestion/] --> Split2[/Split/] --> GEX2[GEX 2]\n  Raw3[Sample 3] --- Ingestion3[/Ingestion/] --> Split3[/Split/] --> GEX3[GEX 3]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  GEX2 --> ProcGEX2[/USS GEX/]\n  GEX3 --> ProcGEX3[/USS GEX/]\n  ProcGEX1 & ProcGEX2 & ProcGEX3 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  GEX --> ProcGEX[/UMS GEX/]\n  ProcGEX --- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 3: Example of how the concatenation and merges work.\nGEX: Gene-expression. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing.\n\n\n\n\n\n\n\nMultiple multimodal samples\n\n\n\n\n\n\nflowchart LR\n\n  Raw1[Sample 1] --- Ingestion1[/Ingestion/] --> Split1[/Split/] --> GEX1[GEX 1] & ADT1[ADT 1]\n  Raw2[Sample 2] --- Ingestion2[/Ingestion/] --> Split2[/Split/] --> GEX2[GEX 2] & ADT2[ADT 2]\n  GEX1 --> ProcGEX1[/USS GEX/]\n  ADT1 --> ProcADT1[/USS ADT/]\n  GEX2 --> ProcGEX2[/USS GEX/]\n  ADT2 --> ProcADT2[/USS ADT/]\n  ProcGEX1 & ProcGEX2 --- ConcatGEX[/Concatenating\\nSamples/] --> GEX[Combined\\nGEX]\n  ProcADT1 & ProcADT2 --- ConcatADT[/Concatenating\\nSamples/] --> ADT[Combined\\nADT]\n  GEX --> ProcGEX[/UMS GEX/]\n  ADT --> ProcADT[/UMS ADT/]\n  ProcGEX & ProcADT --- Merge[/Merge/] --> Integration[/Integration/] --> Downstream[/.../]\n\n\n\n\n\n\nFigure 4: Example of how the concat and merges work.\nGEX: Gene-expression. ADT: Antibody-Derived Tags. USS: Unimodal single-sample processing. UMS: Unimodal multi-sample processing."
  },
  {
    "objectID": "architecture/index.html",
    "href": "architecture/index.html",
    "title": "Overview",
    "section": "",
    "text": "The single-cell workflow is comprised of multiple (standalone) subworkflows."
  },
  {
    "objectID": "architecture/index.html#subworkflows",
    "href": "architecture/index.html#subworkflows",
    "title": "Overview",
    "section": "Subworkflows",
    "text": "Subworkflows\n\nIngestion\nPurpose: Convert raw sequencing data or count tables into MuData data for further processing.\n\n\n\n\n\n\nflowchart LR\n\n  BCL[\"BCL*\"]\n  Fastq[\"Fastq*\"]\n  Ref[\"Reference\"]\n  RawDir[\"Raw out*\"]\n  RawCounts[\"Raw counts†\"]\n\n  Demux[/\"Demux\"/]\n  Mapping[/\"Mapping\"/]\n  Convert[/\"Convert\"/]\n\n  BCL --- Demux --> Fastq\n  Fastq & Ref --- Mapping --> RawDir --- Convert --> RawCounts\n\n\n  BCL -.-|\".tar.gz/Directory\"| BCL\n  Fastq -.-|\".fastq.gz/.fastq\"| Fastq\n  Ref -.-|\".tar.gz?\"| Ref\n  RawDir -.-|\"Directory\"| RawDir\n  RawCounts -.-|\".h5mu\"| RawCounts\n\n  linkStyle 7,8,9,10,11 stroke:#fff,stroke-width:0px,text-align:left;\n\n\n\n\n\nFigure 2: Ingestion pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nSingle-sample unimodal processing\nPurpose: Per modality fitering pipelines are available to select true from false cells.\n\n\n\n\n\n\nflowchart LR\n\n  RawCounts[\"Raw counts*\"]\n  Processed[\"Processed\\ncounts†\"]\n\n  Step1[/\"Cell\\nfiltering\"/]\n  Step2[/\"Doublet\\ncalling\"/]\n  Step3[/\"Ambient RNA\\ncorrection\"/]\n  \n  RawCounts --> Step1 --> Step2 --> Step3 --> Processed\n\n\n\n\n\nFigure 3: Single-sample processing pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nMulti-sample unimodal processing\nPurpose: … .\n\n\n\n\n\n\nflowchart LR\n\n  Processed[\"Processed\\ncounts*\"]\n  Normalised[\"Normalised\\ncounts†\"]\n\n  Step1[/\"Feature annotation\"/]\n  Step2[/\"Batch correction?\"/]\n  Step3[/\"Normalisation\"/]\n  Step4[/\"Feature selection\"/]\n\n  Processed --> Step1 --> Step2 --> Step3 --> Step4 --> Normalised\n\n\n\n\n\nFigure 4: Multi-sample processing pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nIntegration\nPurpose: Performs an integration pipeline for single cell data based on a single or multiple modalities.\n\n\n\n\n\n\nflowchart LR\n\n  Normalised[\"Normalised\\ncounts*\"]\n  Integrated[\"Integrated\\ndata†\"]\n\n  Step1[/\"Data integration\"/]\n  Step2[/\"Dimensionality\\nreduction\"/]\n  \n  Normalised --> Step1 --> Step2 --> Integrated\n\n\n\n\n\nFigure 5: Integration pipeline.\n*: Possible entry points.\n†: Output file(s)\n\n\n\n\n\n\n\nInterpretation\nPurpose: Take different dataset annotations and combine them together into a single enriched dataset. The idea is to have a diff_muon object, i.e. a muon object containing the changes of the original object where data from the diff_muon will be pushed to the original muon object.\n\n\n\n\n\n\nNote\n\n\n\nThis is what we did a time ago and it has the drawback that it could make everything very slow. We might need to be able to aggregate diffs before adding them to the final object."
  },
  {
    "objectID": "contribute/index.html",
    "href": "contribute/index.html",
    "title": "Developers Guide",
    "section": "",
    "text": "%%{init: { 'logLevel': 'debug', 'theme': 'default'} } }%%\ngitGraph\n  commit id: \"initial commit\"\n  branch main_build\n  commit id: \"CI build\"\n  checkout main\n  commit\n  checkout main_build\n  merge main\n  checkout main\n  branch feature_a\n  branch feature_b\n  checkout feature_a\n  commit\n  commit\n  checkout main\n  commit id: \"#release 0.1\" type: HIGHLIGHT\n  checkout main_build\n  merge main\n  checkout main\n  branch release\n  commit tag: \"0.1\"\n  checkout main\n  commit\n  checkout feature_b\n  commit\n  commit\n  checkout feature_a\n  commit\n  checkout main\n  merge feature_a\n  checkout main_build\n  merge main\n  checkout main\n  checkout feature_b\n  commit\n  checkout main\n  merge feature_b\n  checkout main_build\n  merge main\n  checkout release\n  merge main tag: \"0.2\""
  }
]