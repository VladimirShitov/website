---
title: Architecture
---

The single-cell workflow is comprised of multiple (standalone) subworkflows.

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-architecture
%%| fig-cap: Overview single cell processing steps in OpenPipeline. Rectangles are data objects, parallelograms are Viash modules or subworkflows.
flowchart TD  
  subgraph ingest ["Ingestion"]
    direction LR
    RawCounts1["Raw counts"]
    BCL["BCL"]
    Demux["Demux"]
    Fastq["Fastq"]
    Ref["Reference"]
    Mapping["Mapping"]
    RawDir["Raw out"]
    Convert["Convert"]
    RawCounts1["Raw counts"]
    BCL --> Demux --> Fastq
    Fastq & Ref --> Mapping --> RawDir --> Convert --> RawCounts1
  end
  subgraph unimodalsinglesample ["Unimodal Single Sample Processing"]
    direction LR
    RawCounts2["Raw counts for one modality"]
    ProccessedCounts1["Processed\nCounts"]
    AmbientRNACorr[/"Ambient RNA\ncorrection"/]
    RawCounts2 --> CellFiltering --> DoubletCalling --> AmbientRNACorr --> ProccessedCounts1
  end
  subgraph unimodalmultisample ["Unimodal Multi Sample Processing"]
    direction LR
    FeatureAnnotation[/"Feature annotation"/]
    BatchCorrection["Batch correction"]
    Normalization["Normalisation"]
    FeatureSelection["Feature selection"]
    ProccessedCounts2["Processed\nCounts"]
    DoubletCalling["Doublet\ncalling"]
    CellFiltering["Cell\nfiltering"]
    NormalisedOut["Normalised\ncounts"]

    ProccessedCounts2 --> FeatureAnnotation --> BatchCorrection --> Normalization --> FeatureSelection --> NormalisedOut
  end
  subgraph integration ["Integration"]
    direction LR

    Normalised["Normalised\ncounts"]
    Integrated["Integrated\ndata"]

    DataIntegration[/"Data integration"/]
    DimRed[/"Dimensionality\nreduction"/]
  
    Normalised --> DataIntegration --> DimRed --> Integrated

  end
  subgraph downstreamprocessing ["Downstream Processing"]
    direction LR
    Interpretation["Interpretation"]
    Conversion["Conversion"]
    Dataset["Dataset"]

    Interpretation --> Conversion --> Dataset
  end

  ingest --> split --> unimodalsinglesample --> concat --> unimodalmultisample --> merging --> integration  --> downstreamprocessing
  %% Do not change the ID for these boxes because this is linked to custom css
  titlebox_ingestion["Convert raw sequencing data\nor count tables into MuData data\nfor further processing."]
  titlebox_empty[" "]
  titlebox2["Per modality fitering pipelines\nare available to select true\nfrom false cells."]
  titlebox_empty2[" "]
  titlebox3["..."]
  titlebox_empty3[" "]
  titlebox4["Performs an integration pipeline for single\ncell data based on a single or multiple modalities."]
  titlebox5["Take different dataset annotations and combine\nthem together into a single enriched dataset.\n The idea is to have a diff_muon object,\n i.e. a muon object containing the  changes \n of the original objectwhere data from the\ndiff_muon will be pushed to the original muon object."]
  titlebox_ingestion --> titlebox_empty --> titlebox2 --> titlebox_empty2 --> titlebox3 --> titlebox_empty3--> titlebox4 --> titlebox5
```

:::

# Use-cases



:::{.callout-note}
In these use-cases, `Interpretation`, `Conversion` and `Dataset` are omitted because they are the same in every use case.
:::


### A single unimodal sample

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example1
%%| fig-cap: "Example of how the concatenation and merges work.  \nGEX: Gene-expression."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1[/Process GEX\nprofile/]
  ProcGEX1 --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/]
  ProcGEX --> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::


### Multiple unimodal samples

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example3
%%| fig-cap: "Example of how the concatenation and merges work.  \nGEX: Gene-expression."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1[/Process GEX\nprofile/]
  Raw2[Sample 2] --> Split2[/Split\nmodalities/] --> ProcGEX2[/Process GEX\nprofile/]
  Raw3[Sample 3] --> Split3[/Split\nmodalities/] --> ProcGEX3[/Process GEX\nprofile/]
  ProcGEX1 & ProcGEX2 & ProcGEX3 --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/] 
  ProcGEX --> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::


### A single multimodal sample


:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example2
%%| fig-cap: "Example of how the concatenation and merges work.  \nGEX: Gene-expression. ADT: Antibody-Derived Tags. RNAV: RNA Velocity."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1 & ProcADT1 & ProcRNAV1
  ProcGEX1[/Process GEX\nprofile/] --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/]
  ProcADT1[/Process ADT\nprofile/] --> ConcatADT[/Concatenate\nprofiles/] --> ProcADT[/Process ADT\nprofiles/]
  ProcRNAV1[/Process RNAV\nprofile/] --> ConcatRNAV[/Concatenate\nprofiles/] --> ProcRNAV[/Process RNAV\nprofiles/]
  ProcGEX & ProcADT & ProcRNAV--> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::





### Multiple multimodal samples

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example4
%%| fig-cap: "Example of how the concat and merges work.  \nGEX: Gene-expression. ADT: Antibody-Derived Tags."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1 & ProcADT1
  Raw2[Sample 2] --> Split2[/Split\nmodalities/] --> ProcGEX2 & ProcADT2
  ProcGEX1[/Process GEX\nprofile/] & ProcGEX2[/Process GEX\nprofile/] --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/]
  ProcADT1[/Process ADT\nprofile/] & ProcADT2[/Process ADT\nprofile/] --> ConcatADT[/Concatenate\nprofiles/] --> ProcADT[/Process ADT\nprofiles/]
  ProcGEX & ProcADT --> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::
